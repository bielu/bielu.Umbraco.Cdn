// <auto-generated/>
#nullable enable

namespace bielu.Umbraco.Cdn.Core.Logging
{
    partial class LoggerExtension
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.9.1912")]
        private static readonly global::System.Action<global::Microsoft.Extensions.Logging.ILogger, global::System.String?, global::System.Exception?> __LogInfoCallback =
            global::Microsoft.Extensions.Logging.LoggerMessage.Define<global::System.String?>(global::Microsoft.Extensions.Logging.LogLevel.Information, new global::Microsoft.Extensions.Logging.EventId(1, nameof(LogInfo)), "{Message}", new global::Microsoft.Extensions.Logging.LogDefineOptions() { SkipEnabledCheck = true });

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.9.1912")]
        public static partial void LogInfo(this global::Microsoft.Extensions.Logging.ILogger logger, global::System.String? message)
        {
            if (logger.IsEnabled(global::Microsoft.Extensions.Logging.LogLevel.Information))
            {
                __LogInfoCallback(logger, message, null);
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.9.1912")]
        private static readonly global::System.Action<global::Microsoft.Extensions.Logging.ILogger, global::System.String?, global::System.String?, global::System.Exception?> __LogInfoCallback2 =
            global::Microsoft.Extensions.Logging.LoggerMessage.Define<global::System.String?, global::System.String?>(global::Microsoft.Extensions.Logging.LogLevel.Information, new global::Microsoft.Extensions.Logging.EventId(1, nameof(LogInfo)), "{heading}:{Message}", new global::Microsoft.Extensions.Logging.LogDefineOptions() { SkipEnabledCheck = true });

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.9.1912")]
        public static partial void LogInfoWithHeading(this global::Microsoft.Extensions.Logging.ILogger logger, global::System.String? heading, global::System.String? message)
        {
            if (logger.IsEnabled(global::Microsoft.Extensions.Logging.LogLevel.Information))
            {
                __LogInfoCallback2(logger, heading, message, null);
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.9.1912")]
        private readonly struct __LogErrorsStruct : global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<string, object?>>
        {
            private readonly global::System.String? _message;

            public __LogErrorsStruct(global::System.String? message)
            {
                this._message = message;

            }

            public override string ToString()
            {
                var Message = this._message;

                return $"{Message}";
            }

            public static string Format(__LogErrorsStruct state, global::System.Exception? ex) => state.ToString();

            public int Count => 2;

            public global::System.Collections.Generic.KeyValuePair<string, object?> this[int index]
            {
                get => index switch
                {
                    0 => new global::System.Collections.Generic.KeyValuePair<string, object?>("Message", this._message),
                    1 => new global::System.Collections.Generic.KeyValuePair<string, object?>("{OriginalFormat}", "{E}{Message}"),

                    _ => throw new global::System.IndexOutOfRangeException(nameof(index)),  // return the same exception LoggerMessage.Define returns in this case
                };
            }

            public global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, object?>> GetEnumerator()
            {
                for (int i = 0; i < 2; i++)
                {
                    yield return this[i];
                }
            }

            global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator() => GetEnumerator();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.9.1912")]
        public static partial void LogErrors(this global::Microsoft.Extensions.Logging.ILogger logger, global::System.Exception? e, global::System.String? message)
        {
            if (logger.IsEnabled(global::Microsoft.Extensions.Logging.LogLevel.Error))
            {
                logger.Log(
                    global::Microsoft.Extensions.Logging.LogLevel.Error,
                    new global::Microsoft.Extensions.Logging.EventId(1, nameof(LogErrors)),
                    new __LogErrorsStruct(message),
                    e,
                    __LogErrorsStruct.Format);
            }
        }
    }
}
